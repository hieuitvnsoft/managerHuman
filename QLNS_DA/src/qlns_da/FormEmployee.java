/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlns_da;

import Entity.Deparment;
import Entity.Employee;
import Mannager.ManagerDeparment;
import Mannager.ManagerEmployee;
import Mannager.ManagerEmployee.Empx;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AnhHieu
 */
public class FormEmployee extends javax.swing.JInternalFrame {

    MainFrame parent;

    IEmployeDetail ied;
    ManagerEmployee mnEmp = new ManagerEmployee();
    DefaultTableModel modelTable;
    DefaultComboBoxModel<Deparment> modelDeparment;
    ManagerDeparment mnDeparment = new ManagerDeparment();

    // Khai báo interface để callback
    public interface IEmployeDetail {

        public void openDetail(String id);
    }

    /**
     * Creates new form FromEmployee
     */
    public FormEmployee() {
        initComponents();
        addColumn();
        try {
            loadEmp();
            loadDeparment();
        } catch (SQLException ex) {
            Logger.getLogger(FormEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public FormEmployee(MainFrame parent) {
        //this.parent = parent;
        initComponents();
        this.ied = parent;
        addColumn();
        try {
            loadEmp();
            loadDeparment();
        } catch (SQLException ex) {
            Logger.getLogger(FormEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addColumn() {
        modelTable = new DefaultTableModel();
        modelTable.addColumn("Mã nhân viên");
        modelTable.addColumn("Họ tên");
        modelTable.addColumn("Giới tính");
        modelTable.addColumn("Số điện thoại");
        modelTable.addColumn("Địa chỉ");
        modelTable.addColumn("Phòng ban");
        modelTable.addColumn("Chức vụ");
        modelTable.addColumn("Ghi chú");
        tblEmp.setModel(modelTable);
    }

    private void loadEmp() throws SQLException {
        Vector<Employee> lstEmp = mnEmp.getAllEmp();
        for (int i = 0; i < lstEmp.size(); i++) {
            Vector<String> row = new Vector<>();
            Employee empAt = lstEmp.elementAt(i);
            String id = empAt.getIdEmp();
            String name = empAt.getNameEmp();                        //Tên nhân viên
            boolean sex = empAt.isSex();                             //Giới tính
            String phone = empAt.getPhoneEmp();                     //sđt              
            String address = empAt.getAddressEmp();                  //Địa chỉ                       
            String deparment = empAt.getIdDeparment();              //Phòng ban
            String position = empAt.getIdPosition();                 //Chức vụ
            String note = empAt.getNoteEmp();
            row.add(id);
            row.add(name);
            if (sex == true) {
                row.add("Nam");
            } else {
                row.add("Nữ");
            }
            row.add(phone);
            row.add(address);
            row.add(deparment);
            row.add(position);
            row.add(note);
            modelTable.addRow(row);
        }
    }

    private void loadDeparment() throws SQLException {
        Vector<Deparment> lstDepar = mnDeparment.getAllDeparment();
        modelDeparment = new DefaultComboBoxModel<>(lstDepar);
        cboDeparment.setModel(modelDeparment);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        btnView = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cboDeparment = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable();

        jPopupMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPopupMenu1MouseEntered(evt);
            }
        });

        btnView.setText("Xem chi tiết nhân viên");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        jPopupMenu1.add(btnView);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Danh sách nhân viên chính thức");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên nhân viên:");

        cboDeparment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboDeparment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDeparmentItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboDeparment, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiem)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cboDeparment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblEmpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tblEmpMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblEmpMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblEmpMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmp);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
         try {
            String name = txtTimKiem.getText();
            Deparment dp = (Deparment) cboDeparment.getSelectedItem();
            String iddp = dp.getIdDepartment();
            ManagerEmployee mn = new ManagerEmployee();
            Vector<Empx> ls = new Vector<>();
               ls = mn.search(name, iddp);
               while (modelTable.getRowCount() > 0) {
                   modelTable.removeRow(0);
                }
                for (int i = 0; i < ls.size(); i++) {
                    Empx elementAt = ls.elementAt(i);
                    Vector<String> ep = new Vector<>();
                    ep.add(elementAt.getId());
                    ep.add(elementAt.getName());
                    if(elementAt.isSex()==true){
                        ep.add("Nam");
                    }else {
                        ep.add("Nữ");
                    }
                    ep.add(elementAt.getPhone());
                    ep.add(elementAt.getAddress());
                    ep.add(elementAt.getDepar());
                    ep.add(elementAt.getPos());
                    ep.add(elementAt.getNote());
                    modelTable.addRow(ep);
                }
           
        } catch (SQLException ex) {
            Logger.getLogger(FormEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void jPopupMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPopupMenu1MouseEntered

    }//GEN-LAST:event_jPopupMenu1MouseEntered

    private void tblEmpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblEmpMouseEntered

    private void tblEmpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblEmpMousePressed

    private void tblEmpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseExited

    }//GEN-LAST:event_tblEmpMouseExited

    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked


    }//GEN-LAST:event_tblEmpMouseClicked

    private void tblEmpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
            int row = evt.getY() / tblEmp.getRowHeight();
            if (row > -1 && row < tblEmp.getColumnCount()) {
                tblEmp.setRowSelectionInterval(row, row);

            } else {
                tblEmp.clearSelection();
            }
        }
    }//GEN-LAST:event_tblEmpMouseReleased

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int r = tblEmp.getSelectedRow();
        String id = (String) tblEmp.getValueAt(r, 0);
        this.ied.openDetail(id);

    }//GEN-LAST:event_btnViewActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void cboDeparmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDeparmentItemStateChanged
        // TODO add your handling code here:
        Deparment dp = (Deparment) cboDeparment.getSelectedItem();
            String iddp = dp.getIdDepartment();
            ManagerEmployee mn = new ManagerEmployee();
            Vector<Empx> ls = new Vector<>();
        try {
            ls = mn.searchDepar(iddp);
        } catch (SQLException ex) {
            Logger.getLogger(FormEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
                 while (modelTable.getRowCount() > 0) {
                    modelTable.removeRow(0);
                }
                for (int i = 0; i < ls.size(); i++) {
                    Empx elementAt = ls.elementAt(i);
                    Vector<String> ep = new Vector<>();
                    ep.add(elementAt.getId());
                    ep.add(elementAt.getName());
                    if(elementAt.isSex()==true){
                        ep.add("Nam");
                    }else {
                        ep.add("Nữ");
                    }
                    ep.add(elementAt.getPhone());
                    ep.add(elementAt.getAddress());
                    ep.add(elementAt.getDepar());
                    ep.add(elementAt.getPos());
                    ep.add(elementAt.getNote());
                    modelTable.addRow(ep);
                }
    }//GEN-LAST:event_cboDeparmentItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JMenuItem btnView;
    private javax.swing.JComboBox cboDeparment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmp;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
