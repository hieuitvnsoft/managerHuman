/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlns_da;

import Entity.CountTimekeeping;
import Entity.Department;
import Entity.Payroll;
import Mannager.MannagerPayroll;
import Mannager.MannagerSalary;
import Mannager.MannagergetData;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.Year;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.export.ooxml.JRDocxExporter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author AnhHieu
 */
public class frPayroll extends javax.swing.JInternalFrame {

    DefaultTableModel model = new DefaultTableModel();
    DefaultComboBoxModel dcbm;

    /**
     * Creates new form frPayroll
     */
    public frPayroll() {
        try {
            initComponents();
            loadTable();
            loadDep();
            loadMonth();
            tblPayroll.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(frPayroll.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadTable() {
        model.addColumn("Mã nhân viên");
        model.addColumn("Tên nhân viên");
        model.addColumn("Chức vụ");
        model.addColumn("Lương cơ bản");
        model.addColumn("Hệ số");
        model.addColumn("Số công");
        model.addColumn("Tổng lương");

    }

    private void loadDep() throws SQLException {
        MannagergetData mnd = new MannagergetData();
        Vector<Department> lst = mnd.getDepart();
        dcbm = new DefaultComboBoxModel<>(lst);
        cboDepartment.setModel(dcbm);
    }

    private void loadMonth() {
        Date now = new Date();
        int year = Year.now().getValue();
        int month = now.getMonth();
        if (now.getMonth() == 0) {
            year = Year.now().getValue() - 1;
            month = 12;

        }
        txtMonth.setText(year + "-" + month);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPayroll = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboDepartment = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMonth = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Bảng lương");

        jPanel1.setToolTipText("Bảng lương theo tháng");

        tblPayroll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblPayroll);

        jButton2.setText("Lưu lại");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jLabel1.setText("Phòng ban:");

        cboDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDepartmentItemStateChanged(evt);
            }
        });

        jButton1.setText("Tính bảng lương");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Tháng:");

        txtMonth.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int r = tblPayroll.getRowCount();
        if (r < 0) {
            JOptionPane.showMessageDialog(null, "Ko có dữ liệu để thực hiện", "Thông báo", ABORT);
        } else {
            try {
                Vector<Payroll> ls = new Vector<>();
                
                for (int i = 0; i < r; i++) {
                    System.out.println(i);
                    String idemp = (String) tblPayroll.getValueAt(i, 0);
                    System.out.println(idemp);
                    String month = txtMonth.getText().toString();
                    System.out.println(month);
                    int count = (int) tblPayroll.getValueAt(i, 5);
                    float rank = (float) tblPayroll.getValueAt(i, 4);
                    float salary = (float) tblPayroll.getValueAt(i, 3);
                    float total = (float) tblPayroll.getValueAt(i, 6);
                    Payroll pr = new Payroll(idemp, month, count, rank, salary, total);
                    ls.add(pr);
                }
                MannagerPayroll mn = new MannagerPayroll();
                mn.insertPayroll(ls);
                PrintPdf();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Lưu trữ thất bại, các bản ghi có thể đã có", "Thông báo",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Date now = new Date();
        String date;
        int year = Year.now().getValue();
        int month = now.getMonth();
        if (now.getMonth() == 0) {
            year = Year.now().getValue() - 1;
            month = 12;

        }
        if (month < 10) {
            date = "0" + month + "/13/" + year;
        } else {
            date = month + "/13/" + year;
        }
        LocalDate convertedDate = LocalDate.parse(date, DateTimeFormatter.ofPattern("MM/dd/yyyy"));
        convertedDate = convertedDate.withDayOfMonth(
            convertedDate.getMonth().length(convertedDate.isLeapYear()));
        String fistdayofmonth;
        if (month < 10) {
            fistdayofmonth = year + "-0" + month + "-01";
        } else {
            fistdayofmonth = year + "-" + month + "-01";
        }

        String enddayoffmonth = convertedDate.toString();
        System.out.println(enddayoffmonth);
        if (now.getDay() > 0 && now.getDay() < 10) {
            try {
                Department dp = (Department) cboDepartment.getSelectedItem();
                String n = dp.getId();
                Mannager.MannagerSalary mn = new MannagerSalary();
                Vector<CountTimekeeping> ls = new Vector<>();
                ls = mn.CalculatorSalary(fistdayofmonth, enddayoffmonth, n);
                if (ls.size() == 0) {
                    JOptionPane.showMessageDialog(null, "Không có nhân viên có công tháng vừa rồi", "Thông báo", JOptionPane.OK_OPTION);
                } else {
                    for (int i = 0; i < ls.size(); i++) {
                        CountTimekeeping elementAt = ls.elementAt(i);
                        Vector row = new Vector<>();
                        row.add(elementAt.getIdEmp());
                        row.add(elementAt.getName());
                        row.add(elementAt.getPosition());
                        row.add(elementAt.getSalary());
                        float salaryb = elementAt.getSalary();
                        row.add(elementAt.getCoefficient());
                        float hs = elementAt.getCoefficient();
                        row.add(elementAt.getCount());
                        int cout = elementAt.getCount();
                        float total = cout * (salaryb / 25) * hs;
                        row.add(total);

                        model.addRow(row);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(frPayroll.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chưa đến ngày tính lương", "Thông báo", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cboDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDepartmentItemStateChanged
        Department dp = (Department) cboDepartment.getSelectedItem();
        String n = dp.getId();
    }//GEN-LAST:event_cboDepartmentItemStateChanged
    public void PrintPdf() {
        HashMap hm = null;
        Date now = new Date();
        String date;
        int year = Year.now().getValue();
        int month = now.getMonth();
        if (now.getMonth() == 0) {
            year = Year.now().getValue() - 1;
            month = 12;

        }
        if (month < 10) {
            date = "0" + month + "/13/" + year;
        } else {
            date = month + "/13/" + year;
        }
        LocalDate convertedDate = LocalDate.parse(date, DateTimeFormatter.ofPattern("MM/dd/yyyy"));
        convertedDate = convertedDate.withDayOfMonth(
                convertedDate.getMonth().length(convertedDate.isLeapYear()));
        String fistdayofmonth;
        if (month < 10) {
            fistdayofmonth = year + "-0" + month + "-01";
        } else {
            fistdayofmonth = year + "-" + month + "-01";
        }

        String enddayoffmonth = convertedDate.toString();
        System.out.println(enddayoffmonth);
        Department dp = (Department) cboDepartment.getSelectedItem();
        String n = dp.getId();
        String named = dp.getName();
        try {

            String jrxmlFileName = "src/Jasperreport/ReportSalary.jrxml"; // C:/reports/C1_report.jrxml
            String jasperFileName = "src/Jasperreport/ReportSalary.jasper"; // C:/reports/C1_report.jasper
            String pdfFileName = "src/Jasperreport/report1.pdf"; // C:/reports/C1_report.pdf
            String pdfFileNames = "src/Repost/"; // C:/reports/C1_report.pdf

            JasperCompileManager.compileReportToFile(jrxmlFileName, jasperFileName);
            // JasperCompileManager.compileReportToFile(jrxmlFileName, pdfFileName);
            // JasperCompileManager.compileReportToFile(pdfFileName);
            // String dbUrl = props.getProperty("jdbc.url");
            String dbUrl = "jdbc:sqlserver://localhost\\COACH-HIEU\\SQLEXPRESS:1433;databaseName=ManagerHR";
            // String dbDriver = props.getProperty("jdbc.driver");
            String dbDriver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
            // String dbUname = props.getProperty("db.username");
            String dbUname = "sa";
            // String dbPwd = props.getProperty("db.password");
            String dbPwd = "1234$";

            // Load the JDBC driver
            Class.forName(dbDriver);
            // Get the connection
            Connection conn = DriverManager.getConnection(dbUrl, dbUname, dbPwd);

            // Create arguments
            // Map params = new HashMap();
            hm = new HashMap();
            hm.put("date1", fistdayofmonth);
            hm.put("date2", enddayoffmonth);
            hm.put("iddep", n);
            hm.put("month", txtMonth.getText());
            hm.put("Namedep", named);

            // Generate jasper print
            JasperPrint jprint = (JasperPrint) JasperFillManager.fillReport(jasperFileName, hm, conn);
            JasperViewer jv = new JasperViewer(jprint,false);
            jv.setVisible(true);
            // Export pdf file
            String fileName = "Salary-month-" + txtMonth.getText();
            JasperExportManager.exportReportToPdfFile(jprint, pdfFileName);
            JRDocxExporter exporter = new JRDocxExporter();
            exporter.setExporterInput(new SimpleExporterInput(jprint));
            File exportReportFile = new File(pdfFileNames + fileName + ".docx");
            exporter.setExporterOutput(new SimpleOutputStreamExporterOutput(exportReportFile));
            exporter.exportReport();

            System.out.println("Done exporting reports to pdf");

        } catch (Exception e) {
            System.out.print("Exceptiion" + e);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboDepartment;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPayroll;
    private javax.swing.JTextField txtMonth;
    // End of variables declaration//GEN-END:variables
}
