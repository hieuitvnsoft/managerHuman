/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlns_da;

import Entity.Department;
import Entity.EmpSalary;
import Entity.RankSalary;
import Entity.SalaryBasic;
import Entity.Specialized;
import Mannager.MannagerSalary;
import Mannager.MannagerSalary.SalaryEmp;
import Mannager.MannagergetData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AnhHieu
 */
public class frMannargerSalaryEmployee extends javax.swing.JInternalFrame {

    DefaultTableModel model = new DefaultTableModel();
    DefaultComboBoxModel dcbm;

    /**
     * Creates new form frMannargerSalaryEmployee
     */
    public frMannargerSalaryEmployee() {
        try {
            initComponents();
            loadDep();
            loadSpecial();
            loadRank();
            loadSalaryBasic();
            model.addColumn("Mã nhân viên");
            model.addColumn("Tên nhân viên");
            model.addColumn("Chức vụ");
            model.addColumn("Ngạch");
            model.addColumn("Bậc");
            model.addColumn("Hệ số");
            model.addColumn("Mã lương cơ bản");
            model.addColumn("Lương");
            loadEmp();
            tblEmpSalay.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDep() throws SQLException {
        MannagergetData mnd = new MannagergetData();
        Vector<Department> lst = mnd.getDepart();
        dcbm = new DefaultComboBoxModel<>(lst);
        cboDepartment.setModel(dcbm);
    }

    private void loadSpecial() throws SQLException {
        MannagerSalary mnslr = new MannagerSalary();
        Vector<Specialized> lssp = new Vector<>();
        lssp = mnslr.getSpecialized();
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(lssp);
        cboSpecial.setModel(dcbm);

    }

    private void loadRank() throws SQLException {
        MannagerSalary mnslr = new MannagerSalary();
        Vector<RankSalary> lssp = new Vector<>();
        Specialized sp = (Specialized) cboSpecial.getSelectedItem();
        int id = sp.getId();
        lssp = mnslr.getRank(id);
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(lssp);

        cboRank.setModel(dcbm);
        RankSalary k = (RankSalary) cboRank.getSelectedItem();
        float coefficient = k.getCoeffcient();
        txtCoefficient.setText(String.valueOf(coefficient));
    }

    private void loadSalaryBasic() throws SQLException {
        MannagerSalary mnslr = new MannagerSalary();
        Vector<SalaryBasic> lssp = new Vector<>();
        lssp = mnslr.getSalaryBasic();
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(lssp);
        cboSalaryBasic.setModel(dcbm);
        SalaryBasic kz = (SalaryBasic) cboSalaryBasic.getSelectedItem();
        float coefficient = kz.getSalaryBasic();
        txtSalary.setText(String.valueOf(coefficient));

    }

    private void loadEmp() throws SQLException {
        Department dep = (Department) cboDepartment.getSelectedItem();
        String n = dep.getId();
        MannagerSalary mnslr = new MannagerSalary();
        Vector<EmpSalary> lsemp = new Vector<>();
        lsemp = mnslr.getEmp(n);
        for (int i = 0; i < lsemp.size(); i++) {
            EmpSalary elementAt = lsemp.elementAt(i);
            Vector<String> ls = new Vector<>();
            ls.add(elementAt.getIdEmp());
            ls.add(elementAt.getName());
            ls.add(elementAt.getNamePs());
            ls.add(elementAt.getNameSpce());
            ls.add(elementAt.getNameRank());
            ls.add(String.valueOf(elementAt.getCoefficient()));
            ls.add(elementAt.getNameSalary());
            ls.add(String.valueOf(elementAt.getSalary()));

            model.addRow(ls);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdEmp = new javax.swing.JTextField();
        cboSpecial = new javax.swing.JComboBox<>();
        cboRank = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCoefficient = new javax.swing.JTextField();
        txtNameEmp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboSalaryBasic = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpSalay = new javax.swing.JTable();
        cboDepartment = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnCancle = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Xét lương nhân viên");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin lương nhân viên"));

        jLabel3.setText("Mã nhân viên:");

        jLabel4.setText("Tên nhân viên:");

        txtIdEmp.setEditable(false);

        cboSpecial.setEnabled(false);
        cboSpecial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSpecialItemStateChanged(evt);
            }
        });

        cboRank.setEnabled(false);
        cboRank.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboRankItemStateChanged(evt);
            }
        });

        jLabel5.setText("Hệ số:");

        txtCoefficient.setEditable(false);

        txtNameEmp.setEditable(false);

        jLabel6.setText("Ngạch:");

        jLabel7.setText("Bậc:");

        jLabel8.setText("Mã lương cơ bản:");

        cboSalaryBasic.setEnabled(false);
        cboSalaryBasic.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSalaryBasicItemStateChanged(evt);
            }
        });

        jLabel9.setText("Lương cơ bản:");

        txtSalary.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNameEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(cboSalaryBasic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cboSpecial, 0, 159, Short.MAX_VALUE)
                    .addComponent(cboRank, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSalary))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txtCoefficient, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtCoefficient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNameEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cboRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cboSalaryBasic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        tblEmpSalay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblEmpSalay.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblEmpSalay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpSalayMouseClicked(evt);
            }
        });
        tblEmpSalay.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tblEmpSalayInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        tblEmpSalay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblEmpSalayPropertyChange(evt);
            }
        });
        tblEmpSalay.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tblEmpSalayVetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmpSalay);

        cboDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDepartmentItemStateChanged(evt);
            }
        });

        jLabel1.setText("Mã nhân cần tìm:");

        jLabel2.setText("Phòng ban:");

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCancle.setText("Cancle");

        btnSave.setText("Lưu lại");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(27, 27, 27)
                        .addComponent(cboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancle)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancle)
                    .addComponent(btnEdit)
                    .addComponent(btnSave))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboSpecialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSpecialItemStateChanged
        try {
            loadRank();
        } catch (SQLException ex) {
            Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboSpecialItemStateChanged

    private void cboRankItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboRankItemStateChanged
        RankSalary k = (RankSalary) cboRank.getSelectedItem();
        float coefficient = k.getCoeffcient();
        txtCoefficient.setText(String.valueOf(coefficient));
    }//GEN-LAST:event_cboRankItemStateChanged

    private void cboSalaryBasicItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSalaryBasicItemStateChanged
        SalaryBasic kz = (SalaryBasic) cboSalaryBasic.getSelectedItem();
        float coefficient = kz.getSalaryBasic();
        txtSalary.setText(String.valueOf(coefficient));
    }//GEN-LAST:event_cboSalaryBasicItemStateChanged

    private void cboDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDepartmentItemStateChanged
        try {
            int j = tblEmpSalay.getRowCount();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            loadEmp();
        } catch (SQLException ex) {
            Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboDepartmentItemStateChanged

    private void tblEmpSalayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpSalayMouseClicked
        int k = tblEmpSalay.getSelectedRow();
        txtIdEmp.setText(String.valueOf(tblEmpSalay.getValueAt(k, 0)));
        txtNameEmp.setText(String.valueOf(tblEmpSalay.getValueAt(k, 1)));
        ComboBoxModel model = cboSpecial.getModel();
        int size = model.getSize();
        for (int i = 0; i < size; i++) {
            Object element = model.getElementAt(i);
            String n = tblEmpSalay.getValueAt(k, 3).toString();
            String elS = element.toString();
            if (n.equalsIgnoreCase(elS)) {
                cboSpecial.setSelectedIndex(i);
            }
        }
        ComboBoxModel md = cboRank.getModel();
        int r = md.getSize();
        for (int i = 0; i < r; i++) {
            Object element = md.getElementAt(i);
            String n = tblEmpSalay.getValueAt(k, 4).toString();
            String elS = element.toString();
            if (n.equalsIgnoreCase(elS)) {
                cboRank.setSelectedIndex(i);
            }
        }
        ComboBoxModel sb = cboSalaryBasic.getModel();
        int rz = sb.getSize();
        for (int i = 0; i < rz; i++) {
            Object element = sb.getElementAt(i);
            String n = tblEmpSalay.getValueAt(k, 6).toString();
            String elS = element.toString();
            System.out.println(elS);
            if (n.equalsIgnoreCase(elS)) {
                cboSalaryBasic.setSelectedIndex(i);
            }
        }

        txtCoefficient.setText(String.valueOf(tblEmpSalay.getValueAt(k, 5)));
        txtSalary.setText(String.valueOf(tblEmpSalay.getValueAt(k, 7)));
        cboSpecial.setEnabled(false);
        cboSalaryBasic.setEnabled(false);
        cboRank.setEnabled(false);
    }//GEN-LAST:event_tblEmpSalayMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            int j = tblEmpSalay.getRowCount();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            Department dep = (Department) cboDepartment.getSelectedItem();
            String n = dep.getId();
            String id = txtId.getText();
            MannagerSalary mnslr = new MannagerSalary();
            Vector<EmpSalary> lsemp = new Vector<>();
            lsemp = mnslr.searchEmp(n, id);
            for (int i = 0; i < lsemp.size(); i++) {
                EmpSalary elementAt = lsemp.elementAt(i);
                Vector<String> ls = new Vector<>();
                ls.add(elementAt.getIdEmp());
                ls.add(elementAt.getName());
                ls.add(elementAt.getNamePs());
                ls.add(elementAt.getNameSpce());
                ls.add(elementAt.getNameRank());
                ls.add(String.valueOf(elementAt.getCoefficient()));
                ls.add(elementAt.getNameSalary());
                ls.add(String.valueOf(elementAt.getSalary()));

                model.addRow(ls);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        cboSpecial.setEnabled(true);
        cboSalaryBasic.setEnabled(true);
        cboRank.setEnabled(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        try {

            try {
                int r = tblEmpSalay.getRowCount();
                SalaryEmp nv = new Mannager.MannagerSalary().new SalaryEmp();
                nv.setIdEmp(txtIdEmp.getText());
                RankSalary k = (RankSalary) cboRank.getSelectedItem();
                int z = k.getId();
                nv.setIdRank(z);
                SalaryBasic s = (SalaryBasic) cboSalaryBasic.getSelectedItem();
                String sb = s.getId();
                nv.setIdSalarybasic(sb);
                MannagerSalary mn = new MannagerSalary();
                mn.updateSalaryEmp(nv);
            } catch (SQLException ex) {
                Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
            int j = tblEmpSalay.getRowCount();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            loadEmp();

        } catch (SQLException ex) {
            Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblEmpSalayInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblEmpSalayInputMethodTextChanged

    }//GEN-LAST:event_tblEmpSalayInputMethodTextChanged

    private void tblEmpSalayVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tblEmpSalayVetoableChange

    }//GEN-LAST:event_tblEmpSalayVetoableChange

    private void tblEmpSalayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblEmpSalayPropertyChange
        try {
            int j = tblEmpSalay.getRowCount();
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            loadEmp();
        } catch (SQLException ex) {
            Logger.getLogger(frMannargerSalaryEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblEmpSalayPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancle;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cboDepartment;
    private javax.swing.JComboBox<String> cboRank;
    private javax.swing.JComboBox<String> cboSalaryBasic;
    private javax.swing.JComboBox<String> cboSpecial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmpSalay;
    private javax.swing.JTextField txtCoefficient;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdEmp;
    private javax.swing.JTextField txtNameEmp;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
